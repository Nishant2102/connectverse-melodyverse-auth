{"ast":null,"code":"var _jsxFileName = \"/home/shadow-monarch/Documents/intern/client/src/pages/Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport InputField from \"../components/InputField\";\nimport PasswordField from \"../components/PasswordField\";\nimport AlertMessage from \"../components/AlertMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    agree: false\n  });\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: type === \"checkbox\" ? checked : value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (formData.password !== formData.confirmPassword) {\n      setError(\"Passwords do not match\");\n      return;\n    }\n    if (!formData.agree) {\n      setError(\"You must agree to the terms and conditions\");\n      return;\n    }\n    try {\n      const res = await fetch(\"http://localhost:5000/api/auth/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: formData.username,\n          email: formData.email,\n          password: formData.password\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setSuccess(\"Signup successful! Redirecting to login...\");\n        setTimeout(() => navigate(\"/login\"), 1500);\n      } else {\n        setError(data.message);\n      }\n    } catch (err) {\n      setError(\"Server error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex items-center justify-center bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"bg-white p-8 rounded shadow-md w-full max-w-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold mb-6\",\n        children: \"Signup for MelodyVerse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(AlertMessage, {\n        message: error,\n        type: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(AlertMessage, {\n        message: success,\n        type: \"success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        type: \"text\",\n        name: \"username\",\n        value: formData.username,\n        onChange: handleChange,\n        placeholder: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        type: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleChange,\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PasswordField, {\n        name: \"password\",\n        value: formData.password,\n        onChange: handleChange,\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PasswordField, {\n        name: \"confirmPassword\",\n        value: formData.confirmPassword,\n        onChange: handleChange,\n        placeholder: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"agree\",\n          checked: formData.agree,\n          onChange: handleChange,\n          className: \"mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), \"I agree to the Terms and Conditions\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-green-500 text-white p-2 rounded hover:bg-green-600\",\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"LOLEZwi1Djv+xlw3HZ8WpS3NSiw=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useNavigate","InputField","PasswordField","AlertMessage","jsxDEV","_jsxDEV","Signup","_s","formData","setFormData","username","email","password","confirmPassword","agree","error","setError","success","setSuccess","navigate","handleChange","e","name","value","type","checked","target","handleSubmit","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","ok","setTimeout","message","err","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","_c","$RefreshReg$"],"sources":["/home/shadow-monarch/Documents/intern/client/src/pages/Signup.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport InputField from \"../components/InputField\";\nimport PasswordField from \"../components/PasswordField\";\nimport AlertMessage from \"../components/AlertMessage\";\n\nconst Signup = () => {\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    agree: false,\n  });\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setFormData({\n      ...formData,\n      [name]: type === \"checkbox\" ? checked : value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (formData.password !== formData.confirmPassword) {\n      setError(\"Passwords do not match\");\n      return;\n    }\n    if (!formData.agree) {\n      setError(\"You must agree to the terms and conditions\");\n      return;\n    }\n    try {\n      const res = await fetch(\"http://localhost:5000/api/auth/signup\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          username: formData.username,\n          email: formData.email,\n          password: formData.password,\n        }),\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setSuccess(\"Signup successful! Redirecting to login...\");\n        setTimeout(() => navigate(\"/login\"), 1500);\n      } else {\n        setError(data.message);\n      }\n    } catch (err) {\n      setError(\"Server error\");\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-100\">\n      <form onSubmit={handleSubmit} className=\"bg-white p-8 rounded shadow-md w-full max-w-md\">\n        <h2 className=\"text-2xl font-bold mb-6\">Signup for MelodyVerse</h2>\n\n        {error && <AlertMessage message={error} type=\"error\" />}\n        {success && <AlertMessage message={success} type=\"success\" />}\n\n        <InputField\n          type=\"text\"\n          name=\"username\"\n          value={formData.username}\n          onChange={handleChange}\n          placeholder=\"Username\"\n        />\n\n        <InputField\n          type=\"email\"\n          name=\"email\"\n          value={formData.email}\n          onChange={handleChange}\n          placeholder=\"Email\"\n        />\n\n        <PasswordField\n          name=\"password\"\n          value={formData.password}\n          onChange={handleChange}\n          placeholder=\"Password\"\n        />\n\n        <PasswordField\n          name=\"confirmPassword\"\n          value={formData.confirmPassword}\n          onChange={handleChange}\n          placeholder=\"Confirm Password\"\n        />\n\n        <label className=\"block mb-4\">\n          <input\n            type=\"checkbox\"\n            name=\"agree\"\n            checked={formData.agree}\n            onChange={handleChange}\n            className=\"mr-2\"\n          />\n          I agree to the Terms and Conditions\n        </label>\n\n        <button\n          type=\"submit\"\n          className=\"w-full bg-green-500 text-white p-2 rounded hover:bg-green-600\"\n        >\n          Signup\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Signup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}